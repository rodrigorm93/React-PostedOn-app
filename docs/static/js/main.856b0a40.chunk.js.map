{"version":3,"sources":["firebase/firebase-config.js","types/types.js","action/ui.js","action/auth.js","hooks/useForm.js","components/login/LoginScreen.js","components/register/RegisterScreen.js","components/topMenu/MenuPosted.js","components/posted/PostEntry.js","helpers/loadPosts.js","helpers/fileUpload.js","action/post.js","components/posted/PostedEntries.js","components/posted/PostEntrySelect.js","routers/AuthRouter.js","components/posted/AddPost.js","components/posted/PostMyEntry.js","components/posted/ViewMyPost.js","components/posted/EditPost.js","routers/DashboardRoutePrivate.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/postReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","PostApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","login","uid","displayName","catch","e","console","log","Swal","fire","message","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","to","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","RegisterScreen","msgError","nameLogin","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","MenuPosted","SubMenu","Menu","Header","Layout","theme","mode","Item","key","icon","HomeOutlined","activeClassName","exact","UserOutlined","title","signOut","PostEntry","id","body","date","urlVideo","url","newDate","momente","urlVideoState","setUrlVideoState","useEffect","justify","align","span","Card","size","substr","toUpperCase","Title","controls","Img","variant","Body","Text","Footer","format","loadPosts","collection","get","postSnap","posts","forEach","snapHijo","push","data","loadMyPosts","loadPostByCategory","category","fileUpload","file","formData","FormData","append","fetch","method","resp","ok","json","cloudResp","secure_url","activePost","post","PostUp","msj","desactivePost","startLoadingPosts","setPosts","startLoadingMyPosts","startLoadingPostBycategory","startUploading","getState","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","PostedEntries","setLoading","anyNameFunction","map","PostEntrySelect","history","categoryid","useParams","Content","AuthRouter","style","padding","path","component","AddPost","fileup","setfileup","setCategory","selection","setSelection","Form","newPost","Date","getTime","add","startNewPost","Control","Group","controlId","Label","as","rows","custom","files","PostMyEntry","ViewMyPost","EditPost","active","postToFirestore","doc","update","startSavedPost","DashboardRoutePrivate","PrivateRoute","isAuthenticated","Component","rest","props","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","PostApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.856b0a40.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAU0BMvQdQRnYr4c5yK-defmq1238hBJx8\",\r\n  authDomain: \"postedon-app.firebaseapp.com\",\r\n  databaseURL: \"https://postedon-app.firebaseio.com\",\r\n  projectId: \"postedon-app\",\r\n  storageBucket: \"postedon-app.appspot.com\",\r\n  messagingSenderId: \"46859479622\",\r\n  appId: \"1:46859479622:web:f24e563e6506d3f2c5b847\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore(); //base de datos\r\n//para la autentificacion con google\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, googleAuthProvider, firebase };\r\n","export const types = {\r\n  login: \"[Auth] Login\",\r\n  logout: \"[Auth] Logout\",\r\n\r\n  uiSetError: \"[UI] Set Error\",\r\n  uiRemoveError: \"[UI] Remove Error\",\r\n\r\n  uiStartLoading: \"[UI] Start loading\",\r\n  uiFinishLoading: \"[UI] Finish loading\",\r\n\r\n  notesAddNew: \"[Posts] New note\",\r\n  postsActive: \"[Posts] Set active posts\", //para saber si la nota esta activa\r\n  postsDesactive: \"[Posts] Set desactive posts\",\r\n  postsLoad: \"[Posts] Load posts\", //para cargar todas las notas\r\n  notesUpdate: \"[Posts] Update note\",\r\n  notesFileUrl: \"[Posts] Update image url\",\r\n  notesDelete: \"[Posts] Delete note\",\r\n  notesLogoutCleaning: \"[Posts] Logout Cleaning\", //para limpiar todo la informacion de notas dle usuario que este en memoria\r\n  postUpCorrect: \"[POST] msj de post subido correctamente\",\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n  type: types.uiSetError,\r\n  payload: err,\r\n});\r\n\r\nexport const removeError = () => ({\r\n  type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading,\r\n});\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading,\r\n});\r\n","import Swal from \"sweetalert2\";\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nexport const startLoginEmailPassword = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n\r\n        dispatch(finishLoading());\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        dispatch(finishLoading());\r\n        Swal.fire(\"Error\", e.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        await user.updateProfile({ displayName: name });\r\n\r\n        dispatch(login(user.uid, user.displayName));\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire(\"Error\", e.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n      });\r\n  };\r\n};\r\n\r\nexport const login = (uid, displayName) => ({\r\n  type: types.login,\r\n  payload: {\r\n    uid,\r\n    displayName,\r\n  },\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nexport const logout = () => ({\r\n  type: types.logout,\r\n});\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startGoogleLogin, startLoginEmailPassword } from \"../../action/auth\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.ui);\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: \"nando@gmail.com\",\r\n    password: \"123456\",\r\n  });\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLoginEmailPassword(email, password));\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    dispatch(startGoogleLogin());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"auth__main\">\r\n        <div className=\"auth__box-container\">\r\n          {name && <Redirect to=\"/\" />}\r\n          <h3 className=\"auth__title\">Login</h3>\r\n\r\n          <form onSubmit={handleLogin}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              className=\"auth__input\"\r\n              autoComplete=\"off\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              className=\"auth__input\"\r\n              value={password}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={loading}\r\n            >\r\n              Login\r\n            </button>\r\n\r\n            <div className=\"auth__social-networks\">\r\n              <p>Login with social networks</p>\r\n\r\n              <div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n                <div className=\"google-icon-wrapper\">\r\n                  <img\r\n                    className=\"google-icon\"\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                    alt=\"google button\"\r\n                  />\r\n                </div>\r\n                <p className=\"btn-text\">\r\n                  <b>Sign in with google</b>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <Link to=\"/register\" className=\"link\">\r\n              Create new account\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { startRegisterWithEmailPasswordName } from \"../../action/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeError, setError } from \"../../action/ui\";\r\n\r\nimport validator from \"validator\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { msgError } = useSelector((state) => state.ui);\r\n  const { name: nameLogin } = useSelector((state) => state.auth);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    name: \"Hernando\",\r\n    email: \"nando@gmail.com\",\r\n    password: \"123456\",\r\n    password2: \"123456\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (name.trim().length === 0) {\r\n      dispatch(setError(\"Name is required\"));\r\n      return false;\r\n    } else if (!validator.isEmail(email)) {\r\n      dispatch(setError(\"Email is not valid\"));\r\n      return false;\r\n    } else if (password !== password2 || password.length < 5) {\r\n      dispatch(\r\n        setError(\r\n          \"Password should be at least 6 characters and match each other\"\r\n        )\r\n      );\r\n      return false;\r\n    }\r\n\r\n    dispatch(removeError());\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"auth__main\">\r\n        <div className=\"auth__box-container\">\r\n          {nameLogin && <Redirect to=\"/\" />}\r\n          <h3 className=\"auth__title\">Register</h3>\r\n\r\n          {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\r\n\r\n          <form onSubmit={handleRegister}>\r\n            {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              className=\"auth__input\"\r\n              autoComplete=\"off\"\r\n              value={name}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              className=\"auth__input\"\r\n              autoComplete=\"off\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              className=\"auth__input\"\r\n              value={password}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              name=\"password2\"\r\n              className=\"auth__input\"\r\n              value={password2}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">\r\n              Register\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Layout, Menu } from \"antd\";\r\nimport { UserOutlined, HomeOutlined } from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nimport { startLogout } from \"../../action/auth\";\r\n\r\nexport const MenuPosted = () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const { SubMenu } = Menu;\r\n  const { Header } = Layout;\r\n\r\n  const hanleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <div className=\"logo\" />\r\n      <Menu theme=\"dark\" mode=\"horizontal\">\r\n        <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n          <NavLink activeClassName=\"active\" exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"video\" icon={<HomeOutlined />}>\r\n          <NavLink activeClassName=\"active\" exact to=\"/category/video\">\r\n            Videos\r\n          </NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"imagen\" icon={<HomeOutlined />}>\r\n          <NavLink activeClassName=\"active\" exact to=\"/category/imagen\">\r\n            Imagenes\r\n          </NavLink>\r\n        </Menu.Item>\r\n\r\n        {name ? (\r\n          <SubMenu\r\n            key=\"user\"\r\n            icon={<UserOutlined />}\r\n            title={name}\r\n            className=\"sub-menu-user\"\r\n          >\r\n            <Menu.Item key=\"addPost\">\r\n              <NavLink activeClassName=\"active\" exact to=\"/private/subirPost\">\r\n                Subir Post\r\n              </NavLink>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"viewPost\">\r\n              <NavLink activeClassName=\"active\" exact to=\"/private/viewPost\">\r\n                Ver Post\r\n              </NavLink>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"logout\" onClick={hanleLogout}>\r\n              Logout\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key=\"login\" className=\"sub-menu-user\">\r\n            <Link to=\"/login\" className=\"link\">\r\n              Login\r\n            </Link>\r\n          </Menu.Item>\r\n        )}\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Avatar } from \"antd\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport momente from \"moment\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nexport const PostEntry = ({ id, name, body, title, date, urlVideo, url }) => {\r\n  const newDate = momente(date);\r\n  const [urlVideoState, setUrlVideoState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setUrlVideoState(`${urlVideo}`);\r\n  }, [urlVideo]); // DE LAS VARIABLES QUE SE VAN A EJECUTAR SE HARA QUE EL USEEFECT SE VUELVA A EJECUTAR, si alguna de\r\n  //esas dos variables sufre un cambio el useEffect se actualizara\r\n\r\n  return (\r\n    <div className=\"post__main\">\r\n      <div className=\"post__box-container\">\r\n        <Row justify=\"space-around\" align=\"middle\">\r\n          <Col span={10}>\r\n            <Card className=\"text-center\">\r\n              <Card.Header className=\"header-card\">\r\n                <Avatar size={40} className=\"avatar-card\">\r\n                  {name.substr(0, 2).toUpperCase()}\r\n                </Avatar>\r\n\r\n                <Card.Title className=\"title-card\">{title}</Card.Title>\r\n                {urlVideoState ? (\r\n                  <ReactPlayer\r\n                    className=\"react-player\"\r\n                    url={urlVideoState}\r\n                    controls={true}\r\n                  />\r\n                ) : (\r\n                  <Card.Img variant=\"top\" src={url} />\r\n                )}\r\n              </Card.Header>\r\n\r\n              <Card.Body>\r\n                <Card.Text className=\"body-card\">{body}</Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer className=\"text-muted\">\r\n                {newDate.format(\"MMM Do YY\")}\r\n                <br />\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","//para cargar las notas de firebase\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadPosts = async () => {\r\n  //sacmaos las notas de firebase mandando el path d ela ubicacion\r\n  const postSnap = await db.collection(`/posts`).get();\r\n\r\n  const posts = [];\r\n\r\n  postSnap.forEach((snapHijo) => {\r\n    //para sacar directmente lo que necesitamos\r\n    posts.push({\r\n      id: snapHijo.id,\r\n      ...snapHijo.data(),\r\n    });\r\n  });\r\n\r\n  return posts;\r\n};\r\n\r\nexport const loadMyPosts = async (uid) => {\r\n  //sacmaos las notas de firebase mandando el path d ela ubicacion\r\n  const postSnap = await db.collection(`/posts`).get();\r\n\r\n  const posts = [];\r\n\r\n  postSnap.forEach((snapHijo) => {\r\n    //para sacar directmente lo que necesitamos\r\n\r\n    if (snapHijo.data().user === uid) {\r\n      posts.push({\r\n        id: snapHijo.id,\r\n        ...snapHijo.data(),\r\n      });\r\n    }\r\n  });\r\n\r\n  return posts;\r\n};\r\n\r\nexport const loadPostByCategory = async (category) => {\r\n  //sacmaos las notas de firebase mandando el path d ela ubicacion\r\n  const postSnap = await db.collection(`/posts`).get();\r\n\r\n  const posts = [];\r\n\r\n  postSnap.forEach((snapHijo) => {\r\n    //para sacar directmente lo que necesitamos\r\n\r\n    if (snapHijo.data().category === category) {\r\n      posts.push({\r\n        id: snapHijo.id,\r\n        ...snapHijo.data(),\r\n      });\r\n    }\r\n  });\r\n\r\n  return posts;\r\n};\r\n","export const fileUpload = async (file) => {\r\n  //subir imagen a cloudinary\r\n  const cloudUrl = \"https://api.cloudinary.com/v1_1/ddmzi0ccp/image/upload\";\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"upload_preset\", \"reactJournal\");\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const resp = await fetch(cloudUrl, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    //si todo salio bien\r\n    if (resp.ok) {\r\n      const cloudResp = await resp.json();\r\n      return cloudResp.secure_url;\r\n    } else {\r\n      throw await resp.json();\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import { db } from \"../firebase/firebase-config\";\r\nimport {\r\n  loadMyPosts,\r\n  loadPostByCategory,\r\n  loadPosts,\r\n} from \"../helpers/loadPosts\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n//tarea asincrona\r\nexport const startNewPost = (name, title, body, urlVideo, selection, file) => {\r\n  return async (dispatch, getState) => {\r\n    // el getState es el segundoa argumento y fucniona como el useSlector para pooder obtener el estado\r\n    //y asi opbtener el uid del usuario que subira la nota. nos estragar todos los state de los reducers\r\n\r\n    const uid = getState().auth.uid;\r\n\r\n    let fileUrl = \"\";\r\n    if (file !== false) {\r\n      fileUrl = await dispatch(startUploading(file));\r\n    }\r\n\r\n    //creamos la nota que queremos crear.\r\n    const newPost = {\r\n      title: title,\r\n      body: body,\r\n      date: new Date().getTime(),\r\n      url: fileUrl,\r\n      urlVideo: urlVideo,\r\n      category: selection,\r\n      name: name,\r\n      user: uid,\r\n    };\r\n\r\n    //ahora el objeto lo mandaremos a firestore\r\n    //el primer argumento es el path de donde yo quiero grabar la informaicon\r\n    //devuleve un prmesa por lo que usaremos el async\r\n\r\n    const doc = await db\r\n      .collection(`/posts`)\r\n      .add(newPost)\r\n      .then(() => {\r\n        const msj = \"Post subido Correctamente\";\r\n        Swal.fire(\"Saved\", newPost.title, \"success\");\r\n        dispatch(PostUp(msj));\r\n      })\r\n      .catch((e) => {\r\n        const msj = null; //la dejamos en null asi no nos derigira al home\r\n        dispatch(PostUp(msj));\r\n        Swal.fire(\"Error\", e.message, \"error\");\r\n      });\r\n\r\n    //dispatch(activePost(doc.id, newPost));\r\n\r\n    //console.log(doc);\r\n  };\r\n};\r\n\r\nexport const activePost = (id, post) => ({\r\n  type: types.postsActive,\r\n  payload: {\r\n    id,\r\n    ...post,\r\n  },\r\n});\r\n\r\nexport const PostUp = (id, msj) => ({\r\n  type: types.postUpCorrect,\r\n  payload: {\r\n    id,\r\n    msj,\r\n  },\r\n});\r\n\r\nexport const desactivePost = () => ({\r\n  type: types.postsDesactive,\r\n  payload: {},\r\n});\r\n\r\nexport const startLoadingPosts = () => {\r\n  return async (dispatch) => {\r\n    const posts = await loadPosts(); //como recibe una promesa usaremos un async\r\n    dispatch(setPosts(posts));\r\n    dispatch(desactivePost());\r\n    dispatch(desactivePost());\r\n  };\r\n};\r\n\r\nexport const startLoadingMyPosts = (uid) => {\r\n  return async (dispatch) => {\r\n    const posts = await loadMyPosts(uid); //como recibe una promesa usaremos un async\r\n    dispatch(setPosts(posts));\r\n  };\r\n};\r\n\r\nexport const startLoadingPostBycategory = (category) => {\r\n  return async (dispatch) => {\r\n    const posts = await loadPostByCategory(category); //como recibe una promesa usaremos un async\r\n    dispatch(setPosts(posts));\r\n  };\r\n};\r\n//funcion para recibir las notas desde firebase\r\n\r\nexport const setPosts = (posts) => ({\r\n  type: types.postsLoad,\r\n  payload: posts,\r\n});\r\n\r\n//Accion para guardar en las base de datos\r\n\r\nexport const startSavedPost = (post, file) => {\r\n  return async (dispatch, getState) => {\r\n    // const uid = getState().auth.uid;\r\n\r\n    //borrarem el url\r\n    Swal.fire({\r\n      title: \"Actualizando...\",\r\n      text: \"Please wait...\",\r\n      allowOutsideClick: false,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n    let fileUrl = \"\";\r\n    if (file) {\r\n      fileUrl = await dispatch(startUploading(file));\r\n    }\r\n\r\n    //const fileUrl = await dispatch(startUploading(file));\r\n    post.url = fileUrl; //solo deberemos actualizar el URL\r\n\r\n    //hay que eliminar el id d ela nota que ya la tenmos\r\n\r\n    const postToFirestore = { ...post };\r\n    delete postToFirestore.id;\r\n\r\n    //,mandamos la actualizacion\r\n    await db.doc(`/posts/${post.id}`).update(postToFirestore);\r\n\r\n    Swal.close();\r\n    dispatch(desactivePost()); //sacamos el post seleccionado\r\n  };\r\n};\r\n\r\n//accion para guardar la imagen\r\n\r\nexport const startUploading = (file) => {\r\n  return async (dispatch, getState) => {\r\n    //const { active: activePost } = getState().posts;\r\n\r\n    Swal.fire({\r\n      title: \"Uploading...\",\r\n      text: \"Please wait...\",\r\n      allowOutsideClick: false,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n\r\n    const fileUrl = await fileUpload(file);\r\n    console.log(fileUrl);\r\n    Swal.close();\r\n\r\n    return fileUrl;\r\n  };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PostEntry } from \"./PostEntry\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLoadingPosts } from \"../../action/post\";\r\n\r\nexport const PostedEntries = () => {\r\n  const { posts } = useSelector((state) => state.posts);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    async function anyNameFunction() {\r\n      await dispatch(startLoadingPosts());\r\n      setLoading(false);\r\n    }\r\n\r\n    anyNameFunction();\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h1>Espere2...</h1>\r\n      ) : (\r\n        <>\r\n          {posts.map((post) => (\r\n            <PostEntry key={post.id} {...post} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { startLoadingPostBycategory } from \"../../action/post\";\r\nimport { PostEntry } from \"./PostEntry\";\r\n\r\nexport const PostEntrySelect = ({ history }) => {\r\n  const { categoryid } = useParams();\r\n\r\n  console.log(categoryid);\r\n\r\n  const { posts } = useSelector((state) => state.posts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function anyNameFunction() {\r\n      await dispatch(startLoadingPostBycategory(categoryid));\r\n      setLoading(false);\r\n    }\r\n\r\n    anyNameFunction();\r\n  }, [dispatch, categoryid]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>PostEntrySelect</h1>\r\n      {loading ? (\r\n        <h1>Espere...</h1>\r\n      ) : (\r\n        <>\r\n          {posts.map((post) => (\r\n            <PostEntry key={post.id} {...post} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/register/RegisterScreen\";\r\nimport { Layout } from \"antd\";\r\nimport { MenuPosted } from \"../components/topMenu/MenuPosted\";\r\nimport { PostedEntries } from \"../components/posted/PostedEntries\";\r\nimport { PostEntrySelect } from \"../components/posted/PostEntrySelect\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <>\r\n      <MenuPosted />\r\n      <Content\r\n        className=\"site-layout-background\"\r\n        style={{\r\n          padding: 14,\r\n        }}\r\n      >\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={LoginScreen} />\r\n\r\n          <Route exact path=\"/register\" component={RegisterScreen} />\r\n\r\n          <Route exact path=\"/\" component={PostedEntries} />\r\n          <Route\r\n            exact\r\n            path=\"/category/:categoryid\"\r\n            component={PostEntrySelect}\r\n          />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startNewPost } from \"../../action/post\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Row, Col } from \"antd\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const AddPost = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const [fileup, setfileup] = useState(false);\r\n  //const [fileupArchivo, setFileupArchivo] = useState(null);\r\n\r\n  const [category, setCategory] = useState(\"imagen\");\r\n\r\n  const [selection, setSelection] = useState(\"imagen\");\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    title: \"\",\r\n    body: \"\",\r\n    urlVideo: \"\",\r\n  });\r\n\r\n  const { title, body, urlVideo } = formValues;\r\n\r\n  const handleAddNew = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startNewPost(name, title, body, urlVideo, category, fileup));\r\n  };\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setfileup(file);\r\n  };\r\n\r\n  const handleSelection = (e) => {\r\n    setSelection(e.target.value);\r\n  };\r\n\r\n  const handleSelectionCategory = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-around\" align=\"middle\">\r\n        <Col span={20}>\r\n          <h1>AddPost</h1>\r\n          <Form onSubmit={handleAddNew}>\r\n            <Form.Control\r\n              size=\"lg\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"title\"\r\n              value={title}\r\n              onChange={handleInputChange}\r\n            />\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Descripción:</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"3\"\r\n                name=\"body\"\r\n                value={body}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n            <Form.Label>Categoria:</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              className=\"mr-sm-2\"\r\n              id=\"inlineFormCustomSelect\"\r\n              onClick={handleSelectionCategory}\r\n              custom\r\n            >\r\n              <option value=\"imagen\">Imagen</option>\r\n              <option value=\"video\">Video</option>\r\n            </Form.Control>\r\n            <br /> <br />\r\n            <Form.Label>Opciones:</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              className=\"mr-sm-2\"\r\n              id=\"inlineFormCustomSelect\"\r\n              custom\r\n              onClick={handleSelection}\r\n            >\r\n              <option value=\"imagen\">Imagen</option>\r\n              <option value=\"video\">Video</option>\r\n            </Form.Control>\r\n            <br /> <br />\r\n            {selection === \"imagen\" ? (\r\n              <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                onChange={handleFileChange}\r\n              />\r\n            ) : (\r\n              <Form.Group controlId=\"formGroupVideo\">\r\n                <Form.Label>Url Video</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"urlVideo\"\r\n                  value={urlVideo}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter url video\"\r\n                />\r\n              </Form.Group>\r\n            )}\r\n            <button type=\"submit\">Guardar</button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport momente from \"moment\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { activePost } from \"../../action/post\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nexport const PostMyEntry = ({ id, body, title, date, urlVideo, url }) => {\r\n  const [urlVideoState, setUrlVideoState] = useState(null);\r\n  const newDate = momente(date);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEntryClick = () => {\r\n    dispatch(\r\n      activePost(id, {\r\n        date,\r\n        title,\r\n        body,\r\n        urlVideo,\r\n        url,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUrlVideoState(`${urlVideo}`);\r\n  }, [urlVideo]); // DE LAS VARIABLES QUE SE VAN A EJECUTAR SE HARA QUE EL USEEFECT SE VUELVA A EJECUTAR, si alguna de\r\n  //esas dos variables sufre un cambio el useEffect se actualizara\r\n\r\n  return (\r\n    <div className=\"post__main\">\r\n      <div className=\"post__box-container\">\r\n        <Row justify=\"space-around\" align=\"middle\">\r\n          <Col span={10}>\r\n            <Card className=\"text-center\">\r\n              <Card.Header className=\"header-card\">\r\n                <Card.Title className=\"title-card\">{title}</Card.Title>\r\n                {urlVideoState ? (\r\n                  <ReactPlayer\r\n                    className=\"react-player\"\r\n                    url={urlVideoState}\r\n                    controls={true}\r\n                  />\r\n                ) : (\r\n                  <Card.Img variant=\"top\" src={url} />\r\n                )}\r\n              </Card.Header>\r\n\r\n              <Card.Body>\r\n                <Card.Text>{body}</Card.Text>\r\n              </Card.Body>\r\n              <Card.Footer className=\"text-muted\">\r\n                {newDate.format(\"MMM Do YY\")}\r\n                <br />\r\n                <Link to=\"/private/editPost\" onClick={handleEntryClick}>\r\n                  Edit\r\n                </Link>\r\n              </Card.Footer>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLoadingMyPosts } from \"../../action/post\";\r\nimport { PostMyEntry } from \"./PostMyEntry\";\r\n\r\nexport const ViewMyPost = () => {\r\n  const { posts } = useSelector((state) => state.posts);\r\n\r\n  const { uid } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function anyNameFunction() {\r\n      await dispatch(startLoadingMyPosts(uid));\r\n      setLoading(false);\r\n    }\r\n\r\n    anyNameFunction();\r\n  }, [dispatch, uid]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Mis Post</h1>\r\n      {loading ? (\r\n        <h1>Espere...</h1>\r\n      ) : (\r\n        <>\r\n          {posts.map((post) => (\r\n            <PostMyEntry key={post.id} {...post} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { activePost, startSavedPost } from \"../../action/post\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Row, Col } from \"antd\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nexport const EditPost = () => {\r\n  const dispatch = useDispatch();\r\n  const [fileup, setfileup] = useState(null);\r\n\r\n  const { active: post } = useSelector((state) => state.posts);\r\n\r\n  const [formValues, handleInputChange] = useForm(post);\r\n\r\n  const { title, body, urlVideo } = formValues;\r\n\r\n  //cada cambio que se le haga a la nota sera actualizado en la nota activa\r\n  useEffect(() => {\r\n    dispatch(activePost(formValues.id, { ...formValues }));\r\n  }, [formValues, dispatch]);\r\n\r\n  const handleEdit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startSavedPost(post, fileup));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setfileup(file);\r\n  };\r\n  return (\r\n    <div>\r\n      <Row justify=\"space-around\" align=\"middle\">\r\n        <Col span={20}>\r\n          <h1>EditPost</h1>\r\n          <Form onSubmit={handleEdit}>\r\n            <Form.Control\r\n              size=\"lg\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"title\"\r\n              value={title}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Descripción</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"3\"\r\n                name=\"body\"\r\n                value={body}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"formGroupVideo\">\r\n              <Form.Label>Url Video</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"urlVideo\"\r\n                value={urlVideo}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <input id=\"fileSelector\" type=\"file\" onChange={handleFileChange} />\r\n            <button type=\"submit\">Guardar</button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MenuPosted } from \"../components/topMenu/MenuPosted\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport { AddPost } from \"../components/posted/AddPost\";\r\nimport { ViewMyPost } from \"../components/posted/ViewMyPost\";\r\nimport { EditPost } from \"../components/posted/EditPost\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const DashboardRoutePrivate = () => {\r\n  // <Route exact path=\"/private/editPost\" component={EditPost} />\r\n  const { active, ok } = useSelector((state) => state.posts);\r\n  return (\r\n    <>\r\n      <MenuPosted />\r\n\r\n      <Content>\r\n        <Switch>\r\n          {ok ? (\r\n            <Redirect to=\"/\" />\r\n          ) : (\r\n            <Route exact path=\"/private/subirPost\" component={AddPost} />\r\n          )}\r\n\r\n          <Route exact path=\"/private/viewPost\" component={ViewMyPost} />\r\n          {active ? (\r\n            <Route exact path=\"/private/editPost\" component={EditPost} />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Switch>\r\n      </Content>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { firebase } from \"../firebase/firebase-config\";\r\nimport { login } from \"../action/auth\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { DashboardRoutePrivate } from \"./DashboardRoutePrivate\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [checking, setChecking] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user?.uid) {\r\n        dispatch(login(user.uid, user.displayName));\r\n        setIsLoggedIn(true);\r\n        //dispatch(startLoadingPosts());\r\n        //una vez que sabemos el id del usuario hacmeos las carga de sus notas\r\n      } else {\r\n        setIsLoggedIn(false);\r\n        //dispatch(startLoadingPosts());\r\n      }\r\n\r\n      setChecking(false);\r\n    });\r\n  }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n  if (checking) {\r\n    return <h1>Espere...</h1>;\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <PrivateRoute\r\n          isAuthenticated={isLoggedIn}\r\n          path=\"/private\"\r\n          component={DashboardRoutePrivate}\r\n        />\r\n        <Route path=\"/\" component={AuthRouter} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  active: null,\r\n  ok: null,\r\n};\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.postsActive:\r\n      return {\r\n        ...state, //clonamos el nuevo estado apra siempre regresar un nuevo estado\r\n        active: {\r\n          ...action.payload, // sacamos todo lo que nos entrego el action\r\n        },\r\n      };\r\n\r\n    case types.postsDesactive:\r\n      return {\r\n        ...state, //clonamos el nuevo estado apra siempre regresar un nuevo estado\r\n        active: null,\r\n        ok: null,\r\n      };\r\n\r\n    case types.postUpCorrect:\r\n      return {\r\n        ...state, //clonamos el nuevo estado apra siempre regresar un nuevo estado\r\n        active: null,\r\n        ok: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case types.postsLoad:\r\n      return {\r\n        ...state,\r\n        posts: [...action.payload], //las notas vienen en un action que es un arreglo\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: null,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload,\r\n      };\r\n\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null,\r\n      };\r\n\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { postReducer } from \"../reducers/postReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  posts: postReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName,\r\n      };\r\n\r\n    case types.logout:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const PostApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/styles.scss\";\n\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { PostApp } from \"./PostApp\";\nReactDOM.render(<PostApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}