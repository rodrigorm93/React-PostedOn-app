{"version":3,"sources":["firebase/firebase-config.js","types/types.js","action/ui.js","action/auth.js","hooks/useForm.js","components/login/LoginScreen.js","components/register/RegisterScreen.js","components/topMenu/MenuPosted.js","components/card-boostrap/CardApp.js","components/posted/PostEntry.js","helpers/loadPosts.js","helpers/fileUpload.js","action/post.js","components/carousels/CarouselsApp.js","components/posted/PostedEntries.js","components/posted/PostEntrySelect.js","components/posted/DetailPostScreen.js","components/posted/DetailPost.js","components/footer/FooterApp.js","routers/AuthRouter.js","components/posted/AddPost.js","components/posted/PostMyEntry.js","components/posted/ViewMyPost.js","components/posted/EditPost.js","routers/DashboardRoutePrivate.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/paginationReducer.js","reducers/postReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","PostApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","notesAddNew","postsActive","postsDesactive","postsLoad","notesUpdate","notesFileUrl","postDelete","notesLogoutCleaning","postUpCorrect","resetPagination","setError","err","type","payload","finishLoading","startLoginEmailPassword","email","password","dispatch","signInWithEmailAndPassword","then","user","uid","displayName","catch","e","console","log","Swal","fire","message","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loading","useSelector","state","ui","formValues","className","to","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","RegisterScreen","msgError","nameLogin","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","a","updateProfile","startRegisterWithEmailPasswordName","MenuPosted","SubMenu","Menu","Header","Layout","theme","mode","Item","key","icon","HomeOutlined","activeClassName","exact","VideoCameraOutlined","CameraOutlined","UserOutlined","title","signOut","CardApp","id","descripcion","url","urlVideoState","newDate","controls","variant","size","substr","toUpperCase","format","PostEntry","date","urlVideo","momente","setUrlVideoState","useEffect","retonarDocumentos","snapshot","documentos","forEach","snapHijo","push","data","loadMyPosts","collection","get","postSnap","posts","loadPostByCategory","category","loadPostDetail","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activePost","post","PostUp","msj","desactivePost","startLoadSinPagination","orderBy","limit","snap","setPosts","firstDocument","lastDocument","startLoadingMyPosts","startLoadingPostDetail","startLoadingPostBycategory","startUploading","getState","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","close","deleteNote","CarouselsApp","Carousel","Caption","PostedEntries","setLoading","anyNameFunction","Spinner","animation","justify","gutter","align","span","map","LeftCircleOutlined","query","endBefore","limitToLast","docs","RightCircleOutlined","startAfter","query2","PostEntrySelect","categoryid","useParams","DetailPostScreen","Card","bg","border","Title","Img","config","language","height","width","readOnly","DetailPost","FooterApp","Footer","Content","AuthRouter","path","component","AddPost","fileup","setfileup","setCategory","selection","setSelection","setBody","decripcion","props","info","fileList","originFileObj","Form","newPost","Date","getTime","add","startNewPost","Label","Control","Group","controlId","as","rows","editor","getData","custom","UploadOutlined","PostMyEntry","Body","SettingFilled","doc","delete","startDeleting","DeleteFilled","ViewMyPost","EditPost","active","editBody","setEditBody","postToFirestore","update","startSavedPost","files","DashboardRoutePrivate","style","padding","marginTop","PrivateRoute","isAuthenticated","Component","rest","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","notesDelete","filter","pagination","store","createStore","applyMiddleware","thunk","PostApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e826d47a.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAU0BMvQdQRnYr4c5yK-defmq1238hBJx8\",\r\n  authDomain: \"postedon-app.firebaseapp.com\",\r\n  databaseURL: \"https://postedon-app.firebaseio.com\",\r\n  projectId: \"postedon-app\",\r\n  storageBucket: \"postedon-app.appspot.com\",\r\n  messagingSenderId: \"46859479622\",\r\n  appId: \"1:46859479622:web:f24e563e6506d3f2c5b847\",\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore(); //base de datos\r\n//para la autentificacion con google\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, googleAuthProvider, firebase };\r\n","export const types = {\r\n  login: \"[Auth] Login\",\r\n  logout: \"[Auth] Logout\",\r\n\r\n  uiSetError: \"[UI] Set Error\",\r\n  uiRemoveError: \"[UI] Remove Error\",\r\n\r\n  uiStartLoading: \"[UI] Start loading\",\r\n  uiFinishLoading: \"[UI] Finish loading\",\r\n\r\n  notesAddNew: \"[Posts] New note\",\r\n  postsActive: \"[Posts] Set active posts\", //para saber si la nota esta activa\r\n  postsDesactive: \"[Posts] Set desactive posts\",\r\n  postsLoad: \"[Posts] Load posts\", //para cargar todas las notas\r\n  notesUpdate: \"[Posts] Update note\",\r\n  notesFileUrl: \"[Posts] Update image url\",\r\n  postDelete: \"[Posts] Delete Post\",\r\n  notesLogoutCleaning: \"[Posts] Logout Cleaning\", //para limpiar todo la informacion de notas dle usuario que este en memoria\r\n  postUpCorrect: \"[POST] msj de post subido correctamente\",\r\n\r\n  resetPagination: \"[Pagination] indicar reinicio de la paginacion\",\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n  type: types.uiSetError,\r\n  payload: err,\r\n});\r\n\r\nexport const removeError = () => ({\r\n  type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n  type: types.uiStartLoading,\r\n});\r\nexport const finishLoading = () => ({\r\n  type: types.uiFinishLoading,\r\n});\r\n","import Swal from \"sweetalert2\";\r\n\r\nimport { types } from \"../types/types\";\r\n\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\";\r\nimport { finishLoading, startLoading } from \"./ui\";\r\nexport const startLoginEmailPassword = (email, password) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n\r\n        dispatch(finishLoading());\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        dispatch(finishLoading());\r\n        Swal.fire(\"Error\", e.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(async ({ user }) => {\r\n        await user.updateProfile({ displayName: name });\r\n\r\n        dispatch(login(user.uid, user.displayName));\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n        Swal.fire(\"Error\", e.message, \"error\");\r\n      });\r\n  };\r\n};\r\n\r\nexport const startGoogleLogin = () => {\r\n  return (dispatch) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(googleAuthProvider)\r\n      .then(({ user }) => {\r\n        dispatch(login(user.uid, user.displayName));\r\n      });\r\n  };\r\n};\r\n\r\nexport const login = (uid, displayName) => ({\r\n  type: types.login,\r\n  payload: {\r\n    uid,\r\n    displayName,\r\n  },\r\n});\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    await firebase.auth().signOut();\r\n\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nexport const logout = () => ({\r\n  type: types.logout,\r\n});\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startGoogleLogin, startLoginEmailPassword } from \"../../action/auth\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nexport const LoginScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.ui);\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    email: \"nando@gmail.com\",\r\n    password: \"123456\",\r\n  });\r\n  const { email, password } = formValues;\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startLoginEmailPassword(email, password));\r\n  };\r\n\r\n  const handleGoogleLogin = () => {\r\n    dispatch(startGoogleLogin());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"auth__main\">\r\n        <div className=\"auth__box-container\">\r\n          {name && <Redirect to=\"/\" />}\r\n          <h3 className=\"auth__title\">Login</h3>\r\n\r\n          <form onSubmit={handleLogin}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              className=\"auth__input\"\r\n              autoComplete=\"off\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              className=\"auth__input\"\r\n              value={password}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <button\r\n              type=\"submit\"\r\n              className=\"btn btn-primary btn-block\"\r\n              disabled={loading}\r\n            >\r\n              Login\r\n            </button>\r\n\r\n            <div className=\"auth__social-networks\">\r\n              <p>Login with social networks</p>\r\n\r\n              <div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n                <div className=\"google-icon-wrapper\">\r\n                  <img\r\n                    className=\"google-icon\"\r\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                    alt=\"google button\"\r\n                  />\r\n                </div>\r\n                <p className=\"btn-text\">\r\n                  <b>Sign in with google</b>\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            <Link to=\"/register\" className=\"link\">\r\n              Create new account\r\n            </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport { startRegisterWithEmailPasswordName } from \"../../action/auth\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { removeError, setError } from \"../../action/ui\";\r\n\r\nimport validator from \"validator\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nexport const RegisterScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const { msgError } = useSelector((state) => state.ui);\r\n  const { name: nameLogin } = useSelector((state) => state.auth);\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    name: \"Hernando\",\r\n    email: \"nando@gmail.com\",\r\n    password: \"123456\",\r\n    password2: \"123456\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formValues;\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n    }\r\n  };\r\n\r\n  const isFormValid = () => {\r\n    if (name.trim().length === 0) {\r\n      dispatch(setError(\"Name is required\"));\r\n      return false;\r\n    } else if (!validator.isEmail(email)) {\r\n      dispatch(setError(\"Email is not valid\"));\r\n      return false;\r\n    } else if (password !== password2 || password.length < 5) {\r\n      dispatch(\r\n        setError(\r\n          \"Password should be at least 6 characters and match each other\"\r\n        )\r\n      );\r\n      return false;\r\n    }\r\n\r\n    dispatch(removeError());\r\n    return true;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"auth__main\">\r\n        <div className=\"auth__box-container\">\r\n          {nameLogin && <Redirect to=\"/\" />}\r\n          <h3 className=\"auth__title\">Register</h3>\r\n\r\n          {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\r\n\r\n          <form onSubmit={handleRegister}>\r\n            {msgError && <div className=\"auth__alert-error\">{msgError}</div>}\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              name=\"name\"\r\n              className=\"auth__input\"\r\n              autoComplete=\"off\"\r\n              value={name}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n              className=\"auth__input\"\r\n              autoComplete=\"off\"\r\n              value={email}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              className=\"auth__input\"\r\n              value={password}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"Confirm password\"\r\n              name=\"password2\"\r\n              className=\"auth__input\"\r\n              value={password2}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary btn-block mb-5\">\r\n              Register\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Layout, Menu } from \"antd\";\r\nimport {\r\n  UserOutlined,\r\n  HomeOutlined,\r\n  VideoCameraOutlined,\r\n  CameraOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nimport { startLogout } from \"../../action/auth\";\r\n\r\nexport const MenuPosted = () => {\r\n  const dispatch = useDispatch();\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const { SubMenu } = Menu;\r\n  const { Header } = Layout;\r\n\r\n  const hanleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <Header>\r\n      <div className=\"logo\" />\r\n      <Menu theme=\"dark\" mode=\"horizontal\">\r\n        <Menu.Item key=\"home\" icon={<HomeOutlined />}>\r\n          <NavLink activeClassName=\"active\" exact to=\"/\">\r\n            Home\r\n          </NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"video\" icon={<VideoCameraOutlined />}>\r\n          <NavLink activeClassName=\"active\" exact to=\"/category/video\">\r\n            Videos\r\n          </NavLink>\r\n        </Menu.Item>\r\n\r\n        <Menu.Item key=\"imagen\" icon={<CameraOutlined />}>\r\n          <NavLink activeClassName=\"active\" exact to=\"/category/imagen\">\r\n            Imagenes\r\n          </NavLink>\r\n        </Menu.Item>\r\n\r\n        {name ? (\r\n          <SubMenu\r\n            key=\"user\"\r\n            icon={<UserOutlined />}\r\n            title={name}\r\n            className=\"sub-menu-user\"\r\n          >\r\n            <Menu.Item key=\"addPost\">\r\n              <NavLink activeClassName=\"active\" exact to=\"/private/subirPost\">\r\n                Subir Post\r\n              </NavLink>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"viewPost\">\r\n              <NavLink activeClassName=\"active\" exact to=\"/private/viewPost\">\r\n                Ver Post\r\n              </NavLink>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"logout\" onClick={hanleLogout}>\r\n              Logout\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key=\"login\" className=\"sub-menu-user\">\r\n            <Link to=\"/login\" className=\"link\">\r\n              Login\r\n            </Link>\r\n          </Menu.Item>\r\n        )}\r\n      </Menu>\r\n    </Header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar } from \"antd\";\r\n\r\nexport const CardApp = ({\r\n  title,\r\n  id,\r\n  descripcion,\r\n  url,\r\n  urlVideoState,\r\n  name,\r\n  newDate,\r\n}) => {\r\n  return (\r\n    <div id=\"cards_landscape_wrap-2\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div>\r\n            <Link to={`/detalle/${id}`}>\r\n              <div className=\"card-flyer\">\r\n                <div className=\"text-box\">\r\n                  <div className=\"image-box\">\r\n                    {urlVideoState ? (\r\n                      <ReactPlayer\r\n                        className=\"react-player-home\"\r\n                        url={urlVideoState}\r\n                        controls={true}\r\n                      />\r\n                    ) : (\r\n                      <img\r\n                        className=\"card-img-home\"\r\n                        variant=\"top\"\r\n                        src={url}\r\n                        alt={name}\r\n                      />\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"text-container\">\r\n                    <div className=\"footer-container\">\r\n                      <Avatar size={40}>\r\n                        {name.substr(0, 2).toUpperCase()}\r\n                      </Avatar>\r\n                    </div>\r\n                    <h6>{title}</h6>\r\n                    <p>{descripcion}</p>\r\n                    <p> {newDate.format(\"MMM Do YY\")}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport momente from \"moment\";\r\n\r\nimport { CardApp } from \"../card-boostrap/CardApp\";\r\nexport const PostEntry = ({\r\n  id,\r\n  name,\r\n  descripcion,\r\n  title,\r\n  date,\r\n  urlVideo,\r\n  url,\r\n}) => {\r\n  const newDate = momente(date);\r\n  const [urlVideoState, setUrlVideoState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setUrlVideoState(`${urlVideo}`);\r\n  }, [urlVideo]); // DE LAS VARIABLES QUE SE VAN A EJECUTAR SE HARA QUE EL USEEFECT SE VUELVA A EJECUTAR, si alguna de\r\n  //esas dos variables sufre un cambio el useEffect se actualizara\r\n\r\n  return (\r\n    <>\r\n      <CardApp\r\n        title={title}\r\n        id={id}\r\n        descripcion={descripcion}\r\n        url={url}\r\n        urlVideoState={urlVideoState}\r\n        name={name}\r\n        newDate={newDate}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n/// toolbar: [[\"Bold\", \"Italic\", \"Format\", \"Styles\", \"Table\"]],\r\n","//para cargar las notas de firebase\r\n\r\nimport { db } from \"../firebase/firebase-config\";\r\n\r\nexport const loadPosts = async () => {\r\n  //sacmaos las notas de firebase mandando el path d ela ubicacion\r\n  const postSnap = await db.collection(`/posts`).get();\r\n\r\n  const posts = [];\r\n\r\n  postSnap.forEach((snapHijo) => {\r\n    //para sacar directmente lo que necesitamos\r\n    posts.push({\r\n      id: snapHijo.id,\r\n      ...snapHijo.data(),\r\n    });\r\n  });\r\n  console.log(posts);\r\n\r\n  return posts;\r\n};\r\n\r\nexport const retonarDocumentos = (snapshot) => {\r\n  const documentos = [];\r\n\r\n  snapshot.forEach((snapHijo) => {\r\n    //para sacar directmente lo que necesitamos\r\n    documentos.push({\r\n      id: snapHijo.id,\r\n      ...snapHijo.data(),\r\n    });\r\n  });\r\n\r\n  return documentos;\r\n};\r\n\r\nexport const loadMyPosts = async (uid) => {\r\n  //sacmaos las notas de firebase mandando el path d ela ubicacion\r\n  const postSnap = await db.collection(`/posts`).get();\r\n\r\n  const posts = [];\r\n\r\n  postSnap.forEach((snapHijo) => {\r\n    //para sacar directmente lo que necesitamos\r\n\r\n    if (snapHijo.data().user === uid) {\r\n      posts.push({\r\n        id: snapHijo.id,\r\n        ...snapHijo.data(),\r\n      });\r\n    }\r\n  });\r\n\r\n  return posts;\r\n};\r\n\r\nexport const loadPostByCategory = async (category) => {\r\n  //sacmaos las notas de firebase mandando el path d ela ubicacion\r\n  const postSnap = await db.collection(`/posts`).get();\r\n\r\n  const posts = [];\r\n\r\n  postSnap.forEach((snapHijo) => {\r\n    //para sacar directmente lo que necesitamos\r\n\r\n    if (snapHijo.data().category === category) {\r\n      posts.push({\r\n        id: snapHijo.id,\r\n        ...snapHijo.data(),\r\n      });\r\n    }\r\n  });\r\n\r\n  return posts;\r\n};\r\n\r\nexport const loadPostDetail = async (id) => {\r\n  //sacmaos las notas de firebase mandando el path d ela ubicacion\r\n  const postSnap = await db.collection(`/posts`).get();\r\n\r\n  const posts = [];\r\n\r\n  postSnap.forEach((snapHijo) => {\r\n    //para sacar directmente lo que necesitamos\r\n\r\n    if (snapHijo.id === id) {\r\n      posts.push({\r\n        id: snapHijo.id,\r\n        ...snapHijo.data(),\r\n      });\r\n    }\r\n  });\r\n\r\n  return posts;\r\n};\r\n","export const fileUpload = async (file) => {\r\n  //subir imagen a cloudinary\r\n  const cloudUrl = \"https://api.cloudinary.com/v1_1/ddmzi0ccp/image/upload\";\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"upload_preset\", \"reactJournal\");\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const resp = await fetch(cloudUrl, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    //si todo salio bien\r\n    if (resp.ok) {\r\n      const cloudResp = await resp.json();\r\n      return cloudResp.secure_url;\r\n    } else {\r\n      throw await resp.json();\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n","import { db } from \"../firebase/firebase-config\";\r\nimport {\r\n  loadMyPosts,\r\n  loadPostByCategory,\r\n  loadPostDetail,\r\n  loadPosts,\r\n  retonarDocumentos,\r\n} from \"../helpers/loadPosts\";\r\nimport { types } from \"../types/types\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { resetearPagination } from \"./pagination\";\r\n\r\n//tarea asincrona\r\nexport const startNewPost = (\r\n  name,\r\n  title,\r\n  body,\r\n  decripcion,\r\n  urlVideo,\r\n  selection,\r\n  file\r\n) => {\r\n  return async (dispatch, getState) => {\r\n    // el getState es el segundoa argumento y fucniona como el useSlector para pooder obtener el estado\r\n    //y asi opbtener el uid del usuario que subira la nota. nos estragar todos los state de los reducers\r\n\r\n    const uid = getState().auth.uid;\r\n\r\n    let fileUrl = \"\";\r\n    if (file !== false) {\r\n      fileUrl = await dispatch(startUploading(file));\r\n    }\r\n\r\n    //creamos la nota que queremos crear.\r\n    const newPost = {\r\n      title: title,\r\n      descripcion: decripcion,\r\n      body: body,\r\n      date: new Date().getTime(),\r\n      url: fileUrl,\r\n      urlVideo: urlVideo,\r\n      category: selection,\r\n      name: name,\r\n      user: uid,\r\n    };\r\n\r\n    //ahora el objeto lo mandaremos a firestore\r\n    //el primer argumento es el path de donde yo quiero grabar la informaicon\r\n    //devuleve un prmesa por lo que usaremos el async\r\n\r\n    const doc = await db\r\n      .collection(`/posts`)\r\n      .add(newPost)\r\n      .then(() => {\r\n        const msj = \"Post subido Correctamente\";\r\n        Swal.fire(\"Saved\", newPost.title, \"success\");\r\n        dispatch(PostUp(msj));\r\n      })\r\n      .catch((e) => {\r\n        const msj = null; //la dejamos en null asi no nos derigira al home\r\n        dispatch(PostUp(msj));\r\n        Swal.fire(\"Error\", e.message, \"error\");\r\n      });\r\n\r\n    //dispatch(activePost(doc.id, newPost));\r\n\r\n    //console.log(doc);\r\n  };\r\n};\r\n\r\nexport const activePost = (id, post) => ({\r\n  type: types.postsActive,\r\n  payload: {\r\n    id,\r\n    ...post,\r\n  },\r\n});\r\n\r\nexport const PostUp = (id, msj) => ({\r\n  type: types.postUpCorrect,\r\n  payload: {\r\n    id,\r\n    msj,\r\n  },\r\n});\r\n\r\nexport const desactivePost = () => ({\r\n  type: types.postsDesactive,\r\n  payload: {},\r\n});\r\n\r\nexport const startLoadingPosts = () => {\r\n  return async (dispatch) => {\r\n    const posts = await loadPosts(); //como recibe una promesa usaremos un async\r\n    dispatch(setPosts(posts));\r\n\r\n    dispatch(desactivePost());\r\n  };\r\n};\r\n\r\nexport const startLoadSinPagination = () => {\r\n  return async (dispatch) => {\r\n    const postSnap = await db.collection(`/posts`);\r\n\r\n    const query = await postSnap.orderBy(\"date\");\r\n\r\n    query\r\n      .limit(4)\r\n      .get()\r\n      .then(async (snap) => {\r\n        dispatch(await setPosts(retonarDocumentos(snap)));\r\n        dispatch(desactivePost());\r\n      });\r\n  };\r\n};\r\n\r\n//pagination\r\n\r\nlet firstDocument = null; //referencia al primer documento\r\nlet lastDocument = null; //referencia al utlimo documento\r\nexport const startLoadpaginationNext = () => {\r\n  return (dispatch) => {\r\n    const postSnap = db.collection(`/posts`);\r\n\r\n    const query = postSnap.orderBy(\"date\").startAfter(lastDocument);\r\n\r\n    const query2 = postSnap.orderBy(\"date\");\r\n\r\n    query\r\n      .limit(4)\r\n      .get()\r\n      .then((snap) => {\r\n        firstDocument = snap.docs[0] || null;\r\n        lastDocument = snap.docs[snap.docs.length - 1] || null; //sacamos el ultimo documento, hacemos la referencia al ultimo docmuento, en el caso que lleguemos al limite regresamos un null y heso hace que se reinicie la paginacion\r\n\r\n        if (!lastDocument) {\r\n          query2\r\n            .limit(4)\r\n            .get()\r\n            .then((snap) => {\r\n              dispatch(setPosts(retonarDocumentos(snap)));\r\n            });\r\n        } else {\r\n          dispatch(setPosts(retonarDocumentos(snap)));\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const startLoadpaginationPrevious = () => {\r\n  return (dispatch) => {\r\n    const postSnap = db.collection(`/posts`);\r\n\r\n    const query = postSnap.orderBy(\"date\"); //cual termine antes que ese primer documento, queremos los anteriores a ese\r\n\r\n    query\r\n      .endBefore(firstDocument)\r\n      .limitToLast(4)\r\n      .get()\r\n      .then((snap) => {\r\n        firstDocument = snap.docs[0] || null;\r\n        lastDocument = snap.docs[snap.docs.length - 1] || null; //sacamos el ultimo documento, hacemos la referencia al ultimo docmuento, en el caso que lleguemos al limite regresamos un null y heso hace que se reinicie la paginacion\r\n        if (firstDocument) {\r\n          dispatch(setPosts(retonarDocumentos(snap)));\r\n        } else if (!firstDocument) {\r\n          query\r\n            .limit(4)\r\n            .get()\r\n            .then((snap) => {\r\n              dispatch(setPosts(retonarDocumentos(snap)));\r\n            });\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\nexport const startLoadingMyPosts = (uid) => {\r\n  return async (dispatch) => {\r\n    const posts = await loadMyPosts(uid); //como recibe una promesa usaremos un async\r\n    dispatch(setPosts(posts));\r\n  };\r\n};\r\n\r\nexport const startLoadingPostDetail = (id) => {\r\n  return async (dispatch) => {\r\n    const posts = await loadPostDetail(id); //como recibe una promesa usaremos un async\r\n    dispatch(setPosts(posts));\r\n  };\r\n};\r\n\r\nexport const startLoadingPostBycategory = (category) => {\r\n  return async (dispatch) => {\r\n    const posts = await loadPostByCategory(category); //como recibe una promesa usaremos un async\r\n    dispatch(setPosts(posts));\r\n  };\r\n};\r\n//funcion para recibir las notas desde firebase\r\n\r\nexport const setPosts = (posts) => ({\r\n  type: types.postsLoad,\r\n  payload: posts,\r\n});\r\n\r\n//Accion para guardar en las base de datos\r\n\r\nexport const startSavedPost = (post, body, file) => {\r\n  return async (dispatch, getState) => {\r\n    // const uid = getState().auth.uid;\r\n\r\n    //borrarem el url\r\n    Swal.fire({\r\n      title: \"Actualizando...\",\r\n      text: \"Please wait...\",\r\n      allowOutsideClick: false,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n    let fileUrl = \"\";\r\n    if (file) {\r\n      fileUrl = await dispatch(startUploading(file));\r\n    }\r\n\r\n    //const fileUrl = await dispatch(startUploading(file));\r\n    post.url = fileUrl; //solo deberemos actualizar el URL\r\n\r\n    post.body = body;\r\n\r\n    //hay que eliminar el id d ela nota que ya la tenmos\r\n\r\n    const postToFirestore = { ...post };\r\n    delete postToFirestore.id;\r\n\r\n    //,mandamos la actualizacion\r\n    await db.doc(`/posts/${post.id}`).update(postToFirestore);\r\n\r\n    Swal.close();\r\n    dispatch(desactivePost()); //sacamos el post seleccionado\r\n  };\r\n};\r\n\r\n//accion para guardar la imagen\r\n\r\nexport const startUploading = (file) => {\r\n  return async (dispatch, getState) => {\r\n    //const { active: activePost } = getState().posts;\r\n\r\n    Swal.fire({\r\n      title: \"Uploading...\",\r\n      text: \"Please wait...\",\r\n      allowOutsideClick: false,\r\n      onBeforeOpen: () => {\r\n        Swal.showLoading();\r\n      },\r\n    });\r\n\r\n    const fileUrl = await fileUpload(file);\r\n    console.log(fileUrl);\r\n    Swal.close();\r\n\r\n    return fileUrl;\r\n  };\r\n};\r\n\r\n//Eliminar post\r\nexport const startDeleting = (id) => {\r\n  return async (dispatch) => {\r\n    await db.doc(`/posts/${id}`).delete();\r\n\r\n    //una vez borrada de la bd lo barraremos del store de redux\r\n    dispatch(deleteNote(id));\r\n  };\r\n};\r\n\r\nexport const deleteNote = (id) => ({\r\n  type: types.postDelete,\r\n  payload: id,\r\n});\r\n","import React from \"react\";\r\nimport { Carousel } from \"react-bootstrap\";\r\n\r\nexport const CarouselsApp = () => {\r\n  return (\r\n    <>\r\n      <Carousel className=\"carousels-app\">\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://www.talkwalker.com/images/2020/blog-headers/image-analysis.png\"\r\n            alt=\"First slide\"\r\n          />\r\n          <Carousel.Caption>\r\n            <h3>First slide label</h3>\r\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://www.talkwalker.com/images/2020/blog-headers/image-analysis.png\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Second slide label</h3>\r\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n        <Carousel.Item>\r\n          <img\r\n            className=\"d-block w-100\"\r\n            src=\"https://www.talkwalker.com/images/2020/blog-headers/image-analysis.png\"\r\n            alt=\"Third slide\"\r\n          />\r\n\r\n          <Carousel.Caption>\r\n            <h3>Third slide label</h3>\r\n            <p>\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur.\r\n            </p>\r\n          </Carousel.Caption>\r\n        </Carousel.Item>\r\n      </Carousel>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { PostEntry } from \"./PostEntry\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  startLoadpaginationNext,\r\n  startLoadpaginationPrevious,\r\n  startLoadSinPagination,\r\n} from \"../../action/post\";\r\nimport { Row, Col, Button } from \"antd\";\r\nimport { LeftCircleOutlined, RightCircleOutlined } from \"@ant-design/icons\";\r\n\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { CarouselsApp } from \"../carousels/CarouselsApp\";\r\nexport const PostedEntries = () => {\r\n  const { posts } = useSelector((state) => state.posts);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    async function anyNameFunction() {\r\n      await dispatch(startLoadSinPagination());\r\n      setLoading(false);\r\n    }\r\n\r\n    anyNameFunction();\r\n  }, [dispatch]);\r\n\r\n  const handlePaginationNext = () => {\r\n    dispatch(startLoadpaginationNext());\r\n  };\r\n\r\n  const handlePaginationPrevious = () => {\r\n    dispatch(startLoadpaginationPrevious());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"spinner\">\r\n          <Spinner animation=\"border\" variant=\"info\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Row\r\n            className=\"row-card\"\r\n            justify=\"space-around\"\r\n            gutter={[24, 16]}\r\n            align=\"middle\"\r\n          >\r\n            <Col span={24}>\r\n              <CarouselsApp />\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            className=\"row-card \"\r\n            justify=\"space-around\"\r\n            gutter={[24, 16]}\r\n            align=\"middle\"\r\n          >\r\n            {posts.map((post) => (\r\n              <Col className=\"col-post\" key={post.id} span={9}>\r\n                <PostEntry {...post} key={post.id} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Row className=\"row-pagination\" justify=\"center\">\r\n            <Col span={8} className=\"col-pagination\">\r\n              <Button\r\n                icon={<LeftCircleOutlined />}\r\n                onClick={handlePaginationPrevious}\r\n              >\r\n                previous\r\n              </Button>\r\n            </Col>\r\n            <Col className=\"col-pagination\">\r\n              <Button\r\n                icon={<RightCircleOutlined />}\r\n                onClick={handlePaginationNext}\r\n              >\r\n                next\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { startLoadingPostBycategory } from \"../../action/post\";\r\nimport { PostEntry } from \"./PostEntry\";\r\nimport { Row, Col } from \"antd\";\r\nimport { Empty } from \"antd\";\r\n\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport const PostEntrySelect = () => {\r\n  const { categoryid } = useParams();\r\n\r\n  const { posts } = useSelector((state) => state.posts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function anyNameFunction() {\r\n      await dispatch(startLoadingPostBycategory(categoryid));\r\n      setLoading(false);\r\n    }\r\n\r\n    anyNameFunction();\r\n  }, [dispatch, categoryid]);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <div className=\"spinner\">\r\n          <Spinner animation=\"border\" variant=\"success\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <Row\r\n            className=\"row-card \"\r\n            justify=\"space-around\"\r\n            gutter={[24, 16]}\r\n            align=\"middle\"\r\n          >\r\n            {posts.length > 0 ? (\r\n              <>\r\n                {posts.map((post) => (\r\n                  <Col className=\"col-post\" key={post.id} span={10}>\r\n                    <PostEntry {...post} key={post.id} />\r\n                  </Col>\r\n                ))}\r\n              </>\r\n            ) : (\r\n              <Col className=\"col-empty\" span={24}>\r\n                <Empty />\r\n              </Col>\r\n            )}\r\n          </Row>\r\n          <Row className=\"row-pagination\" justify=\"center\">\r\n            <Col span={2}></Col>\r\n            <Col span={2}></Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col, Avatar } from \"antd\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport momente from \"moment\";\r\nimport ReactPlayer from \"react-player\";\r\nimport CKEditor from \"ckeditor4-react\";\r\n\r\nexport const DetailPostScreen = ({\r\n  name,\r\n  body,\r\n  title,\r\n  date,\r\n  urlVideo,\r\n\r\n  url,\r\n}) => {\r\n  const newDate = momente(date);\r\n  const [urlVideoState, setUrlVideoState] = useState(null);\r\n\r\n  useEffect(() => {\r\n    setUrlVideoState(`${urlVideo}`);\r\n  }, [urlVideo]); // DE LAS VARIABLES QUE SE VAN A EJECUTAR SE HARA QUE EL USEEFECT SE VUELVA A EJECUTAR, si alguna de\r\n  //esas dos variables sufre un cambio el useEffect se actualizara\r\n\r\n  return (\r\n    <>\r\n      <Row justify=\"space-around\" align=\"middle\" className=\"row-container\">\r\n        <Col span={15} className=\"col-detail\">\r\n          <Card\r\n            className=\"text-center card-box-container\"\r\n            bg={\"light\"}\r\n            text={\"dark\"}\r\n            border=\"light\"\r\n          >\r\n            <Card.Header className=\"header-card\">\r\n              <Avatar size={40} className=\"avatar-card\">\r\n                {name.substr(0, 2).toUpperCase()}\r\n              </Avatar>\r\n\r\n              <Card.Title className=\"title-card\">{title}</Card.Title>\r\n              {urlVideoState ? (\r\n                <ReactPlayer\r\n                  className=\"react-player\"\r\n                  url={urlVideoState}\r\n                  controls={true}\r\n                />\r\n              ) : (\r\n                <Card.Img className=\"img-card\" variant=\"top\" src={url} />\r\n              )}\r\n            </Card.Header>\r\n\r\n            <CKEditor\r\n              config={{\r\n                language: \"es\",\r\n                height: 500,\r\n                width: \"100%\",\r\n              }}\r\n              readOnly={true}\r\n              data={body.data}\r\n            />\r\n          </Card>\r\n\r\n          <footer className=\" footer-card\">\r\n            {newDate.format(\"MMM Do YY\")}\r\n          </footer>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row></Row>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { startLoadingPostDetail } from \"../../action/post\";\r\nimport { DetailPostScreen } from \"./DetailPostScreen\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport const DetailPost = () => {\r\n  const { posts } = useSelector((state) => state.posts);\r\n\r\n  const { id } = useParams();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function anyNameFunction() {\r\n      await dispatch(startLoadingPostDetail(id));\r\n      setLoading(false);\r\n    }\r\n\r\n    anyNameFunction();\r\n  }, [dispatch, id]);\r\n\r\n  console.log(id);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"spinner\">\r\n          <Spinner animation=\"border\" variant=\"info\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {posts.map((post) => (\r\n            <DetailPostScreen key={post.id} {...post} />\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Layout } from \"antd\";\r\n\r\nexport default function FooterApp() {\r\n  const { Footer } = Layout;\r\n\r\n  return (\r\n    <Footer className=\"footer\">\r\n      <p>Rodrigo Ramirez Mendez</p>\r\n      <p>Desarrollado con : React-Redux-sass-Firebase</p>\r\n    </Footer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { RegisterScreen } from \"../components/register/RegisterScreen\";\r\nimport { Layout, Row } from \"antd\";\r\nimport { MenuPosted } from \"../components/topMenu/MenuPosted\";\r\nimport { PostedEntries } from \"../components/posted/PostedEntries\";\r\nimport { PostEntrySelect } from \"../components/posted/PostEntrySelect\";\r\nimport { DetailPost } from \"../components/posted/DetailPost\";\r\nimport FooterApp from \"../components/footer/FooterApp\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const AuthRouter = () => {\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <MenuPosted />\r\n\r\n      <Content className=\"content-app\">\r\n        <div className=\"site-layout-content\">\r\n          <Switch>\r\n            <Route exact path=\"/login\" component={LoginScreen} />\r\n\r\n            <Route exact path=\"/register\" component={RegisterScreen} />\r\n\r\n            <Route exact path=\"/\" component={PostedEntries} />\r\n            <Route\r\n              exact\r\n              path=\"/category/:categoryid\"\r\n              component={PostEntrySelect}\r\n            />\r\n\r\n            <Route exact path=\"/detalle/:id\" component={DetailPost} />\r\n\r\n            <Redirect to=\"/\" />\r\n          </Switch>\r\n        </div>\r\n      </Content>\r\n      <FooterApp />\r\n    </Layout>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startNewPost } from \"../../action/post\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Row, Col } from \"antd\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nimport { Upload, Button } from \"antd\";\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport CKEditor from \"ckeditor4-react\";\r\nexport const AddPost = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { name } = useSelector((state) => state.auth);\r\n\r\n  const [fileup, setfileup] = useState(false);\r\n\r\n  //const [fileupArchivo, setFileupArchivo] = useState(null);\r\n\r\n  const [category, setCategory] = useState(\"imagen\");\r\n\r\n  const [selection, setSelection] = useState(\"imagen\");\r\n\r\n  const [body, setBody] = useState({\r\n    data: \"hola\",\r\n  });\r\n\r\n  const [formValues, handleInputChange] = useForm({\r\n    title: \"\",\r\n    decripcion: \"\",\r\n    urlVideo: \"\",\r\n  });\r\n\r\n  const { title, decripcion, urlVideo } = formValues;\r\n\r\n  const handleAddNew = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      startNewPost(name, title, body, decripcion, urlVideo, category, fileup)\r\n    );\r\n  };\r\n\r\n  const handleInputChangeCk = (e) => {\r\n    setBody({\r\n      data: e.editor.getData(),\r\n    });\r\n  };\r\n\r\n  const handleSelection = (e) => {\r\n    setSelection(e.target.value);\r\n  };\r\n\r\n  const handleSelectionCategory = (e) => {\r\n    setCategory(e.target.value);\r\n  };\r\n\r\n  const props = {\r\n    onChange(info) {\r\n      const file = info.fileList[0].originFileObj;\r\n      setfileup(file);\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className=\"post__main animate__animated animate__pulse\">\r\n      <Row justify=\"space-around\" align=\"middle\">\r\n        <Col span={20}>\r\n          <h1 className=\"title-add-post\">AddPost</h1>\r\n\r\n          <Form onSubmit={handleAddNew}>\r\n            <Form.Label>Titulo:</Form.Label>\r\n            <Form.Control\r\n              size=\"lg\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"title\"\r\n              value={title}\r\n              onChange={handleInputChange}\r\n            />\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Descripción:</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"2\"\r\n                name=\"decripcion\"\r\n                value={decripcion}\r\n                onChange={handleInputChange}\r\n              />\r\n\r\n              <br />\r\n              <Form.Label>Contenido:</Form.Label>\r\n              <CKEditor data={body.data} onChange={handleInputChangeCk} />\r\n            </Form.Group>\r\n            <Form.Label>Categoria:</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              className=\"mr-sm-2\"\r\n              id=\"inlineFormCustomSelect\"\r\n              onClick={handleSelectionCategory}\r\n              custom\r\n            >\r\n              <option value=\"imagen\">Imagen</option>\r\n              <option value=\"video\">Video</option>\r\n            </Form.Control>\r\n            <br /> <br />\r\n            <Form.Label>Opciones:</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              className=\"mr-sm-2\"\r\n              id=\"inlineFormCustomSelect\"\r\n              custom\r\n              onClick={handleSelection}\r\n            >\r\n              <option value=\"imagen\">Imagen</option>\r\n              <option value=\"video\">Video</option>\r\n            </Form.Control>\r\n            <br /> <br />\r\n            {selection === \"imagen\" ? (\r\n              <Upload {...props}>\r\n                <Button icon={<UploadOutlined />}>Click to Upload</Button>\r\n              </Upload>\r\n            ) : (\r\n              <Form.Group controlId=\"formGroupVideo\">\r\n                <Form.Label>Url Video</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"urlVideo\"\r\n                  value={urlVideo}\r\n                  onChange={handleInputChange}\r\n                  placeholder=\"Enter url video\"\r\n                />\r\n              </Form.Group>\r\n            )}\r\n            <div className=\"container-button-submit\">\r\n              <button className=\"button-submit\" type=\"submit\">\r\n                Guardar\r\n              </button>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\nimport { DeleteFilled, SettingFilled } from \"@ant-design/icons\";\r\nimport momente from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  activePost,\r\n  startDeleting,\r\n  startLoadingMyPosts,\r\n} from \"../../action/post\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactPlayer from \"react-player\";\r\nimport CKEditor from \"ckeditor4-react\";\r\n\r\nexport const PostMyEntry = ({\r\n  id,\r\n  body,\r\n  descripcion,\r\n  title,\r\n  date,\r\n  urlVideo,\r\n  url,\r\n}) => {\r\n  const [urlVideoState, setUrlVideoState] = useState(null);\r\n  const { uid } = useSelector((state) => state.auth);\r\n  const newDate = momente(date);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleEntryClick = () => {\r\n    dispatch(\r\n      activePost(id, {\r\n        date,\r\n        title,\r\n        body,\r\n        urlVideo,\r\n        descripcion,\r\n        url,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setUrlVideoState(`${urlVideo}`);\r\n  }, [urlVideo]); // DE LAS VARIABLES QUE SE VAN A EJECUTAR SE HARA QUE EL USEEFECT SE VUELVA A EJECUTAR, si alguna de\r\n  //esas dos variables sufre un cambio el useEffect se actualizara\r\n\r\n  const handleDelete = () => {\r\n    dispatch(startDeleting(id));\r\n    dispatch(startLoadingMyPosts(uid));\r\n  };\r\n\r\n  return (\r\n    <Card className=\"text-center\">\r\n      <Card.Header className=\"header-card\">\r\n        <Card.Title className=\"title-card\">{title}</Card.Title>\r\n        {urlVideoState ? (\r\n          <ReactPlayer\r\n            className=\"react-detail\"\r\n            url={urlVideoState}\r\n            controls={true}\r\n          />\r\n        ) : (\r\n          <Card.Img className=\"card-img-detail\" variant=\"top\" src={url} />\r\n        )}\r\n      </Card.Header>\r\n\r\n      <Card.Body>\r\n        <CKEditor\r\n          config={{\r\n            language: \"es\",\r\n          }}\r\n          readOnly={true}\r\n          data={body.data}\r\n        />\r\n      </Card.Body>\r\n      <Card.Footer className=\"text-muted\">\r\n        {newDate.format(\"MMM Do YY\")}\r\n\r\n        <Link\r\n          to=\"/private/editPost\"\r\n          className=\"icon-edit\"\r\n          onClick={handleEntryClick}\r\n        >\r\n          <SettingFilled />\r\n        </Link>\r\n\r\n        <div className=\"icons-list btn-delete\" onClick={handleDelete}>\r\n          <DeleteFilled />\r\n        </div>\r\n      </Card.Footer>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLoadingMyPosts } from \"../../action/post\";\r\nimport { PostMyEntry } from \"./PostMyEntry\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport { Row, Col, Button } from \"antd\";\r\n\r\nexport const ViewMyPost = () => {\r\n  const { posts } = useSelector((state) => state.posts);\r\n\r\n  const { uid } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    async function anyNameFunction() {\r\n      await dispatch(startLoadingMyPosts(uid));\r\n      setLoading(false);\r\n    }\r\n\r\n    anyNameFunction();\r\n  }, [dispatch, uid]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <div className=\"spinner\">\r\n          <Spinner animation=\"border\" variant=\"info\" />\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {posts.map((post) => (\r\n            <Row justify=\"space-around\" align=\"middle\">\r\n              <Col className=\"col-post-myPost\" key={post.id} span={12}>\r\n                <PostMyEntry key={post.id} {...post} />\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { activePost, startSavedPost } from \"../../action/post\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Row, Col } from \"antd\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\nimport CKEditor from \"ckeditor4-react\";\r\n\r\nexport const EditPost = () => {\r\n  const dispatch = useDispatch();\r\n  const [fileup, setfileup] = useState(null);\r\n\r\n  const { active: post } = useSelector((state) => state.posts);\r\n\r\n  const [formValues, handleInputChange] = useForm(post);\r\n\r\n  const { title, body, descripcion, urlVideo } = formValues;\r\n\r\n  const [editBody, setEditBody] = useState({\r\n    data: body,\r\n  });\r\n\r\n  //cada cambio que se le haga a la nota sera actualizado en la nota activa\r\n  useEffect(() => {\r\n    dispatch(activePost(formValues.id, { ...formValues }));\r\n  }, [formValues, dispatch]);\r\n\r\n  const handleEdit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(startSavedPost(post, editBody, fileup));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setfileup(file);\r\n  };\r\n\r\n  const handleInputChangeCk = (e) => {\r\n    setEditBody({\r\n      data: e.editor.getData(),\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"animate__animated animate__fadeIn\">\r\n      <Row justify=\"space-around\" align=\"middle\">\r\n        <Col span={20}>\r\n          <h1>EditPost</h1>\r\n          <Form onSubmit={handleEdit}>\r\n            <Form.Control\r\n              size=\"lg\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"title\"\r\n              value={title}\r\n              onChange={handleInputChange}\r\n            />\r\n\r\n            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n              <Form.Label>Descripción</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows=\"3\"\r\n                name=\"body\"\r\n                value={descripcion}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <CKEditor\r\n              config={{\r\n                language: \"es\",\r\n              }}\r\n              onChange={handleInputChangeCk}\r\n              data={editBody.data}\r\n            />\r\n\r\n            <Form.Group controlId=\"formGroupVideo\">\r\n              <Form.Label>Url Video</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"urlVideo\"\r\n                value={urlVideo}\r\n                onChange={handleInputChange}\r\n              />\r\n            </Form.Group>\r\n\r\n            <input id=\"fileSelector\" type=\"file\" onChange={handleFileChange} />\r\n            <button type=\"submit\">Guardar</button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MenuPosted } from \"../components/topMenu/MenuPosted\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport { AddPost } from \"../components/posted/AddPost\";\r\nimport { ViewMyPost } from \"../components/posted/ViewMyPost\";\r\nimport { EditPost } from \"../components/posted/EditPost\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst { Content } = Layout;\r\n\r\nexport const DashboardRoutePrivate = () => {\r\n  // <Route exact path=\"/private/editPost\" component={EditPost} />\r\n  const { active, ok } = useSelector((state) => state.posts);\r\n  return (\r\n    <Layout className=\"layout\">\r\n      <MenuPosted />\r\n\r\n      <Content\r\n        className=\"site-layout\"\r\n        style={{ padding: \"0 10px\", marginTop: 20 }}\r\n      >\r\n        <Switch>\r\n          {ok ? (\r\n            <Redirect to=\"/\" />\r\n          ) : (\r\n            <Route exact path=\"/private/subirPost\" component={AddPost} />\r\n          )}\r\n\r\n          <Route exact path=\"/private/viewPost\" component={ViewMyPost} />\r\n          {active ? (\r\n            <Route exact path=\"/private/editPost\" component={EditPost} />\r\n          ) : (\r\n            <Redirect to=\"/\" />\r\n          )}\r\n        </Switch>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      component={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n  isAuthenticated: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { firebase } from \"../firebase/firebase-config\";\r\nimport { login } from \"../action/auth\";\r\nimport { AuthRouter } from \"./AuthRouter\";\r\nimport { DashboardRoutePrivate } from \"./DashboardRoutePrivate\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [checking, setChecking] = useState(true);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged(async (user) => {\r\n      if (user?.uid) {\r\n        dispatch(login(user.uid, user.displayName));\r\n        setIsLoggedIn(true);\r\n        //dispatch(startLoadingPosts());\r\n        //una vez que sabemos el id del usuario hacmeos las carga de sus notas\r\n      } else {\r\n        setIsLoggedIn(false);\r\n        //dispatch(startLoadingPosts());\r\n      }\r\n\r\n      setChecking(false);\r\n    });\r\n  }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n  if (checking) {\r\n    return (\r\n      <div className=\"spinner\">\r\n        <Spinner animation=\"border\" variant=\"info\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <PrivateRoute\r\n          isAuthenticated={isLoggedIn}\r\n          path=\"/private\"\r\n          component={DashboardRoutePrivate}\r\n        />\r\n        <Route path=\"/\" component={AuthRouter} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  reset: null,\r\n};\r\n\r\nexport const paginationReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.resetPagination:\r\n      return {\r\n        reset: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  posts: [],\r\n  active: null,\r\n  ok: null,\r\n};\r\n\r\nexport const postReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.postsActive:\r\n      return {\r\n        ...state, //clonamos el nuevo estado apra siempre regresar un nuevo estado\r\n        active: {\r\n          ...action.payload, // sacamos todo lo que nos entrego el action\r\n        },\r\n      };\r\n\r\n    case types.postsDesactive:\r\n      return {\r\n        ...state, //clonamos el nuevo estado apra siempre regresar un nuevo estado\r\n        active: null,\r\n        ok: null,\r\n      };\r\n\r\n    case types.postUpCorrect:\r\n      return {\r\n        ...state, //clonamos el nuevo estado apra siempre regresar un nuevo estado\r\n        active: null,\r\n        ok: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case types.postsLoad:\r\n      return {\r\n        ...state,\r\n        posts: [...action.payload], //las notas vienen en un action que es un arreglo\r\n      };\r\n\r\n    case types.notesDelete:\r\n      return {\r\n        ...state,\r\n        active: null, //desmarcamos la nota que estamo borrando sandnola d ela snotas activas\r\n        posts: state.posts.filter((post) => post.id !== action.payload), //devolvemos todas las nota menos la que borramos\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n  loading: false,\r\n  msgError: null,\r\n};\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.uiSetError:\r\n      return {\r\n        ...state,\r\n        msgError: action.payload,\r\n      };\r\n\r\n    case types.uiRemoveError:\r\n      return {\r\n        ...state,\r\n        msgError: null,\r\n      };\r\n\r\n    case types.uiStartLoading:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case types.uiFinishLoading:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { paginationReducer } from \"../reducers/paginationReducer\";\r\nimport { postReducer } from \"../reducers/postReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducers = combineReducers({\r\n  auth: authReducer,\r\n  ui: uiReducer,\r\n  posts: postReducer,\r\n  pagination: paginationReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case types.login:\r\n      return {\r\n        uid: action.payload.uid,\r\n        name: action.payload.displayName,\r\n      };\r\n\r\n    case types.logout:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/store\";\r\n\r\nexport const PostApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./styles/styles.scss\";\n\nimport \"antd/dist/antd.css\"; // or 'antd/dist/antd.less'\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { PostApp } from \"./PostApp\";\nReactDOM.render(<PostApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}